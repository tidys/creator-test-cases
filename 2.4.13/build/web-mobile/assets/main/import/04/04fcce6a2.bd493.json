[1,["f0BIwQ8D5Ml7nTNQbh1YlS","ecpdLyjvZBwrvm+cedCcQy","e97GVMl6JHh5Ml5qEDdSGa","29FYIk+N1GYaeWH/q1NxQO","48mJeJRMBE2JElIiUJPkGR","d5W5bx0IlHtqdZcUtuLuG6","38DwX29WhBq6Ie3v6KRTcj","b350ZHMadJCInPv/7wcbml","0ek66qC1NOQLjgYmi04HvX"],["node","_parent","_spriteFrame","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite","_N$skeletonData","_effectAsset","tintLabel","matLabel","cacheLabel","batchLabel","sp2","sp1","sp0","scene","grayMaterial","normalMaterial"],[["cc.Node",["_name","_id","_components","_contentSize","_children","_trs","_parent"],1,9,5,2,7,1],["cc.Node",["_name","_parent","_components","_contentSize","_trs","_color"],2,1,2,5,7,5],["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","node"],-1,1],["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Canvas",["node"],3,1],["7fa3163/tVA2oO0IuiaM79C",["node","sp0","sp1","sp2","batchLabel","cacheLabel","matLabel","tintLabel","grayMaterial","normalMaterial"],3,1,1,1,1,1,1,1,1,6,6],["cc.Sprite",["_type","_sizeMode","node","_materials","_spriteFrame"],1,1,3,6],["cc.Camera",["_clearFlags","_depth","node"],1,1],["cc.Button",["_N$transition","node","clickEvents","_N$normalColor","_N$pressedColor","_N$disabledColor","_N$target","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite"],2,1,9,5,5,5,1,6,6,6,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.Scene",["_name","autoReleaseAssets","_children","_anchorPoint","_trs"],1,2,5,7],["sp.Skeleton",["defaultAnimation","_preCacheMode","_animationName","node","_materials"],0,1,3],["cc.Label",["_string","_fontSize","_enableWrapText","_N$horizontalAlign","_N$verticalAlign","_N$overflow","node","_materials"],-3,1,3]],[[0,0,4,2,3,2],[0,0,6,4,2,3,5,2],[1,0,1,2,5,3,2],[2,1,0,2,3,4,5],[8,0,1,2,3,4,3],[10,0,1,2,3,4,5,6,7,8,9,10,2],[11,0,1,2,3],[14,0,1,2,3,4,5,6,7,7],[1,0,1,2,3,4,2],[13,0,1,2,3,4,4],[3,0,1,3],[2,0,4,2],[4,0,1,2,4],[5,0,1,3],[0,0,1,4,2,3,5,3],[0,0,6,2,3,2],[6,0,1],[7,0,1,2,3,4,5,6,7,8,9,1],[9,0,1,2,3],[12,0,1,2,3,4,3]],[[[[10,"gray-spine",{"0":{"defines":{}}}]],0,0,[0],[8],[7]],[[[10,"normal-spine",{"0":{"defines":{}}}]],0,0,[0],[8],[8]],[[[12,"gray-spine",[{"hash":1199197041,"record":null,"name":"gray-spine|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\n#if USE_TINT\n  in vec4 a_color0;\n#endif\nin vec2 a_uv0;\nout vec2 v_uv0;\nout vec4 v_light;\n#if USE_TINT\n  out vec4 v_dark;\n#endif\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  v_uv0 = a_uv0;\n  v_light = a_color;\n  #if USE_TINT\n    v_dark = a_color0;\n  #endif\n  gl_Position = mvp * vec4(a_position, 1);\n}","frag":"\nprecision highp float;\nuniform sampler2D texture;\nin vec2 v_uv0;\nin vec4 v_light;\n#if USE_TINT\n  in vec4 v_dark;\n#endif\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_TEXTURE\n      texColor.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  vec4 finalColor;\n  #if USE_TINT\n    finalColor.a = v_light.a * texColor.a;\n    finalColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    finalColor = texColor * v_light;\n  #endif\n  ALPHA_TEST(finalColor);\n  float gray = 0.2126 * finalColor.r + 0.7152 * finalColor.g + 0.0722 * finalColor.b;\n  gl_FragColor = vec4(gray, gray, gray, finalColor.a);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\n#if USE_TINT\n  attribute vec4 a_color0;\n#endif\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvarying vec4 v_light;\n#if USE_TINT\n  varying vec4 v_dark;\n#endif\nvoid main () {\n  mat4 mvp;\n  #if CC_USE_MODEL\n    mvp = cc_matViewProj * cc_matWorld;\n  #else\n    mvp = cc_matViewProj;\n  #endif\n  v_uv0 = a_uv0;\n  v_light = a_color;\n  #if USE_TINT\n    v_dark = a_color0;\n  #endif\n  gl_Position = mvp * vec4(a_position, 1);\n}","frag":"\nprecision highp float;\nuniform sampler2D texture;\nvarying vec2 v_uv0;\nvarying vec4 v_light;\n#if USE_TINT\n  varying vec4 v_dark;\n#endif\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_TEXTURE\n      texColor.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  vec4 finalColor;\n  #if USE_TINT\n    finalColor.a = v_light.a * texColor.a;\n    finalColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    finalColor = texColor * v_light;\n  #endif\n  ALPHA_TEST(finalColor);\n  float gray = 0.2126 * finalColor.r + 0.7152 * finalColor.g + 0.0722 * finalColor.b;\n  gl_FragColor = vec4(gray, gray, gray, finalColor.a);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TINT","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_TEXTURE","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"gray-spine|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[13,"SpineBatch",null],[14,"Canvas","a5esZu+45LA5mBpvttspPD",[-11,-12,-13,-14,-15,-16,-17,-18],[[16,-1],[11,45,-2],[17,-10,-9,-8,-7,-6,-5,-4,-3,31,32]],[5,960,640],[480,320,0,0,0,0,1,1,1,1]],[0,"Background",[-21],[[4,1,0,-19,[4],5],[3,0,45,100,40,-20]],[5,100,40]],[0,"Background",[-24],[[4,1,0,-22,[11],12],[3,0,45,100,40,-23]],[5,100,40]],[0,"Background",[-27],[[4,1,0,-25,[18],19],[3,0,45,100,40,-26]],[5,100,40]],[0,"Background",[-30],[[4,1,0,-28,[25],26],[3,0,45,100,40,-29]],[5,100,40]],[15,"Main Camera",1,[[18,7,-1,-31],[11,45,-32]],[5,960,640]],[1,"New Button",1,[2],[[5,2,-33,[[6,"7fa3163/tVA2oO0IuiaM79C","onBatch",1]],[4,4293322470],[4,4291348680],[4,3363338360],2,6,7,8,9]],[5,100,40],[-239.115,-193.909,0,0,0,0,1,1,1,1]],[1,"New Button",1,[3],[[5,2,-34,[[6,"7fa3163/tVA2oO0IuiaM79C","onGray",1]],[4,4293322470],[4,4291348680],[4,3363338360],3,13,14,15,16]],[5,100,40],[91.601,-193.909,0,0,0,0,1,1,1,1]],[1,"New Button",1,[4],[[5,2,-35,[[6,"7fa3163/tVA2oO0IuiaM79C","onCache",1]],[4,4293322470],[4,4291348680],[4,3363338360],4,20,21,22,23]],[5,100,40],[-74.947,-193.909,0,0,0,0,1,1,1,1]],[1,"New Button",1,[5],[[5,2,-36,[[6,"7fa3163/tVA2oO0IuiaM79C","onTint",1]],[4,4293322470],[4,4291348680],[4,3363338360],5,27,28,29,30]],[5,100,40],[236.735,-193.909,0,0,0,0,1,1,1,1]],[19,"New Node",true,[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[8,"sp",1,[-37],[5,1223.72,1055.62],[-308.654,-40.66,0,0,0,0,1,0.3,0.3,1]],[9,"walk",0,"walk",12,[0]],[8,"sp",1,[-38],[5,1223.72,1055.62],[-4.11,-40.66,0,0,0,0,1,0.3,0.3,1]],[9,"walk",0,"walk",14,[1]],[8,"sp",1,[-39],[5,1223.72,1055.62],[270.694,-40.66,0,0,0,0,1,0.3,0.3,1]],[9,"walk",0,"walk",16,[2]],[2,"Label",2,[-40],[4,4278190080],[5,100,40]],[7,"batch",20,false,1,1,1,18,[3]],[2,"Label",3,[-41],[4,4278190080],[5,100,40]],[7,"gray",20,false,1,1,1,20,[10]],[2,"Label",4,[-42],[4,4278190080],[5,100,40]],[7,"cache",20,false,1,1,1,22,[17]],[2,"Label",5,[-43],[4,4278190080],[5,100,40]],[7,"tint",20,false,1,1,1,24,[24]]],0,[0,0,1,0,0,1,0,9,25,0,10,21,0,11,23,0,12,19,0,13,17,0,14,15,0,15,13,0,0,1,0,-1,6,0,-2,12,0,-3,14,0,-4,16,0,-5,7,0,-6,8,0,-7,9,0,-8,10,0,0,2,0,0,2,0,-1,18,0,0,3,0,0,3,0,-1,20,0,0,4,0,0,4,0,-1,22,0,0,5,0,0,5,0,-1,24,0,0,6,0,0,6,0,0,7,0,0,8,0,0,9,0,0,10,0,-1,13,0,-1,15,0,-1,17,0,-1,19,0,-1,21,0,-1,23,0,-1,25,0,16,11,1,1,11,2,1,7,3,1,8,4,1,9,5,1,10,43],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,15,17],[-1,-1,-1,-1,-1,2,3,4,5,6,-1,-1,2,3,4,5,6,-1,-1,2,3,4,5,6,-1,-1,2,3,4,5,6,17,18,7,7,7],[4,4,6,1,1,0,0,2,0,3,1,1,0,0,2,0,3,1,1,0,0,2,0,3,1,1,0,0,2,0,3,6,4,5,5,5]]]]